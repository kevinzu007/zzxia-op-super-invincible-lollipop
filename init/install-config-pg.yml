# 须带环境变量运行：
# ansible-playbook install-config-pg-ENV.yml  -e "RUN_ENV=${RUN_ENV}"

- hosts: pg
  become: yes
  tasks:
    - name: 拷贝：pg/backup
      copy: src=./pg/backup/  dest=/backup/pg/  owner=postgres group=postgres mode=644 backup=yes
    #- name: sh加执行权限：/backup/pg
    #- shell: "chmod +x /backup/pg/*.sh"
    - name: 加执行权限：pg_list_backup_or_restore.sh
      file: dest=/backup/pg/pg_list_backup_or_restore.sh  state=file  owner=postgres  group=postgres  mode=0755
    - name: 加执行权限：pg_backup_or_restore.sh
      file: dest=/backup/pg/pg_backup_or_restore.sh  state=file  owner=postgres  group=postgres  mode=0755


- hosts: pg_m
  become: yes
  vars:
    - RUN_ENV: "{{ lookup('env','RUN_ENV') }}"
  tasks:
    - name: crontab - pg_list_backup
      cron: name=pg-list-backup backup=yes state=present minute=0 hour=2 day=*  month=* weekday=* user=postgres  job='. /etc/profile; bash /backup/pg/pg_list_backup_or_restore_by_user_postgres.sh -b -c  >/tmp/pg_list_backup_or_restore_by_user_postgres.sh.log 2>&1'
      when: RUN_ENV == "prod"
      #when: ansible_default_ipv4.address == '10.1.1.182'




