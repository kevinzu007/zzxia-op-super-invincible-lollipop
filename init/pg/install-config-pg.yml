# 须带环境变量运行：
# ansible-playbook install-config-pg.yml  -e "RUN_ENV=${RUN_ENV}"

- hosts: pg
  become: yes
  vars:
    - PG_MANAGE_SH_HOME: "{{ lookup('env','PG_MANAGE_SH_HOME') }}"
  tasks:
    - name: 拷贝：manage
      copy: src=./manage/  dest={{ PG_MANAGE_SH_HOME }}/  owner=postgres group=postgres mode=644 backup=yes
    #- name: sh加执行权限：/manage/pg
    #- shell: "chmod +x /manage/pg/*.sh"
    - name: 加执行权限：pg_list_backup_or_restore.sh
      file: dest={{ PG_MANAGE_SH_HOME }}/pg_list_backup_or_restore.sh  state=file  owner=postgres  group=postgres  mode=0755
    - name: 加执行权限：pg_backup_or_restore.sh
      file: dest={{ PG_MANAGE_SH_HOME }}/pg_backup_or_restore.sh  state=file  owner=postgres  group=postgres  mode=0755
    - name: 拷贝：pg_hba.conf
      copy: src=./setup/pg_hba.conf  dest=/usr/local/pgsql/data/pg_hba.conf        owner=postgres group=postgres mode=644 backup=yes
    - name: 拷贝：my-pg.conf
      copy: src=./setup/my-pg.conf   dest=/usr/local/pgsql/data/conf.d/my-pg.conf  owner=postgres group=postgres mode=644 backup=yes
    - name: crontab - 清理pg日志
      cron: name=清理pg日志 backup=yes state=present minute=0 hour=0 day=*  month=* weekday=* user=postgres  job='find /usr/local/pgsql/data/log/ -maxdepth 1 -type f -mtime +30 -exec rm -f {} \; > /dev/null'
    - name: crontab - 清理pg_wal
      cron: name=清理pg_wal backup=yes state=present minute=0 hour=0 day=*  month=* weekday=* user=postgres  job='find /usr/local/pgsql/data/pg_wal/ -maxdepth 1 -type f -mtime +30 -exec rm -f {} \; > /dev/null'


- hosts: pg_m
  become: yes
  vars:
    - RUN_ENV: "{{ lookup('env','RUN_ENV') }}"
    - PG_MANAGE_SH_HOME: "{{ lookup('env','PG_MANAGE_SH_HOME') }}"
  tasks:
    - name: crontab - pg_list_backup
      cron: name=pg-list-backup backup=yes state=present minute=0 hour=2 day=*  month=* weekday=* user=postgres  job='. /etc/profile; bash {{ PG_MANAGE_SH_HOME }}/pg_list_backup_or_restore_by_user_postgres.sh -b -c  >/tmp/pg_list_backup_or_restore_by_user_postgres.sh.log 2>&1'
      when: RUN_ENV == "prod"
      #when: ansible_default_ipv4.address == '10.1.1.182'
    - name: crontab - 清理备份
      cron: name=清理备份 backup=yes state=present minute=0 hour=0 day=*  month=* weekday=* user=postgres  job='find {{ PG_MANAGE_SH_HOME }}/bak/ -ctime +25 -a -type d -a -name "*T*"  -exec rm -rf {} \; > /dev/null'
      when: RUN_ENV == "prod"


